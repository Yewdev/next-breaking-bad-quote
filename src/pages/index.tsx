import { type NextPage } from "next";
import Head from "next/head";
import type { IQuote } from "~/types";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const { data, refetch, isFetching } = api.quotes.getQuote.useQuery<IQuote>();
  const { quote, author } = data || { quote: "", author: "" };

  return (
    <>
      <Head>
        <title>Breaking Bad Quotes</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="flex flex-col items-center justify-center gap-4 rounded-md bg-white/10 px-10 py-6">
          {!isFetching ? (
            <>
              <h1 className="text-white">{`" ${quote} "`}</h1>
              <h1 className="text-white">{author}</h1>
            </>
          ) : (
            <p className="text-white">Loading...</p>
          )}
          <button
            onClick={() => refetch()}
            className="rounded-md bg-white px-4 py-1 text-black disabled:bg-white/50"
            disabled={isFetching}
          >
            Generate
          </button>
        </div>
      </main>
    </>
  );
};

export default Home;
